/* TaskFinishClient.cpp
   Generated by gSOAP 2.8.16 from .\taskfinish.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "TaskFinishH.h"

namespace TaskFinish {

SOAP_SOURCE_STAMP("@(#) TaskFinishClient.cpp ver 2.8.16 2020-03-04 06:28:46 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetTaskFinishInfoByTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns5__GetTaskFinishInfoByTime *ns5__GetTaskFinishInfoByTime, _ns5__GetTaskFinishInfoByTimeResponse *ns5__GetTaskFinishInfoByTimeResponse)
{	struct __ns1__GetTaskFinishInfoByTime soap_tmp___ns1__GetTaskFinishInfoByTime;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:80";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetTaskFinishInfoByTime.ns5__GetTaskFinishInfoByTime = ns5__GetTaskFinishInfoByTime;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTaskFinishInfoByTime(soap, &soap_tmp___ns1__GetTaskFinishInfoByTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTaskFinishInfoByTime(soap, &soap_tmp___ns1__GetTaskFinishInfoByTime, "-ns1:GetTaskFinishInfoByTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTaskFinishInfoByTime(soap, &soap_tmp___ns1__GetTaskFinishInfoByTime, "-ns1:GetTaskFinishInfoByTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetTaskFinishInfoByTimeResponse)
		return soap_closesock(soap);
	ns5__GetTaskFinishInfoByTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetTaskFinishInfoByTimeResponse->soap_get(soap, "ns5:GetTaskFinishInfoByTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetTaskExcuteInfoByTaskId(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns5__GetTaskExcuteInfoByTaskId *ns5__GetTaskExcuteInfoByTaskId, _ns5__GetTaskExcuteInfoByTaskIdResponse *ns5__GetTaskExcuteInfoByTaskIdResponse)
{	struct __ns1__GetTaskExcuteInfoByTaskId soap_tmp___ns1__GetTaskExcuteInfoByTaskId;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:80";
	if (soap_action == NULL)
		soap_action = "";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetTaskExcuteInfoByTaskId.ns5__GetTaskExcuteInfoByTaskId = ns5__GetTaskExcuteInfoByTaskId;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTaskExcuteInfoByTaskId(soap, &soap_tmp___ns1__GetTaskExcuteInfoByTaskId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTaskExcuteInfoByTaskId(soap, &soap_tmp___ns1__GetTaskExcuteInfoByTaskId, "-ns1:GetTaskExcuteInfoByTaskId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTaskExcuteInfoByTaskId(soap, &soap_tmp___ns1__GetTaskExcuteInfoByTaskId, "-ns1:GetTaskExcuteInfoByTaskId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetTaskExcuteInfoByTaskIdResponse)
		return soap_closesock(soap);
	ns5__GetTaskExcuteInfoByTaskIdResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetTaskExcuteInfoByTaskIdResponse->soap_get(soap, "ns5:GetTaskExcuteInfoByTaskIdResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace TaskFinish


#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of TaskFinishClient.cpp */
